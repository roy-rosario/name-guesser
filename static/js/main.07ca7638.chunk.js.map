{"version":3,"sources":["NameContainer.js","NameLogic.js","App.js","reportWebVitals.js","index.js"],"names":["NameContainer","props","className","nameInfo","name","gender","probability","NameLogic","useState","nameInput","setNameInput","setNameInfo","e","a","preventDefault","fetch","res","json","data","console","error","onSubmit","type","placeholder","value","onChange","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAYeA,MAVf,SAAuBC,GACnB,OACI,sBAAKC,UAAY,iBAAjB,UACQ,qBAAIA,UAAY,WAAhB,kBAAgC,uBAAhC,IAAuCD,EAAME,SAASC,QACtD,qBAAIF,UAAY,WAAhB,qBAAmC,uBAAnC,IAA0CD,EAAME,SAASE,UACzD,qBAAIH,UAAY,OAAhB,0BAAoC,uBAApC,IAA2CD,EAAME,SAASG,mBC+C3DC,MAlDf,WAEI,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,EAAiCF,mBAC7B,CACIJ,KAAM,GACNC,OAAQ,GACRC,YAAa,KAJrB,mBAAQH,EAAR,KAAkBQ,EAAlB,KAJgB,4CAWhB,WAAuBC,GAAvB,iBAAAC,EAAA,6DACID,EAAEE,iBADN,kBAG0BC,MAAM,iCAAD,OAAkCN,IAHjE,cAGcO,EAHd,gBAI2BA,EAAIC,OAJ/B,OAIcC,EAJd,OAKQP,EAAY,CACRP,KAAMc,EAAKd,KACXC,OAAQa,EAAKb,OACbC,YAAaY,EAAKZ,cAR9B,kDAYQa,QAAQC,MAAR,MAZR,2DAXgB,sBA2BhB,OACI,sBAAKlB,UAAY,YAAjB,UACI,8CACA,cAAC,EAAD,CAAeC,SAAUA,IAEzB,uBAAMD,UAAY,OAAOmB,SAhCjB,4CAgCR,UACI,uBACIC,KAAO,OACPC,YAAc,iBACdnB,KAAO,YACPoB,MAASf,EACTgB,SAAY,SAAAb,GAERF,EAAaE,EAAEc,OAAOF,UAG1B,mDCtCLG,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.07ca7638.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction NameContainer(props){\r\n    return(\r\n        <div className = \"name-container\">\r\n                <h2 className = 'cell one'>Name:<br/> {props.nameInfo.name}</h2>\r\n                <h2 className = 'cell two'>Gender: <br/> {props.nameInfo.gender}</h2>\r\n                <h2 className = 'cell'>probability: <br/> {props.nameInfo.probability}</h2>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default NameContainer","import React, {useState}from 'react'\r\nimport NameContainer from './NameContainer'\r\n\r\n\r\nfunction NameLogic(){\r\n\r\n    const [nameInput, setNameInput] = useState(\"\")\r\n\r\n    const [ nameInfo, setNameInfo] = useState(\r\n        {\r\n            name: \"\",\r\n            gender: \"\",\r\n            probability: \"\"\r\n        })\r\n\r\n    async function getData(e){    \r\n        e.preventDefault()\r\n        try{\r\n            const res = await fetch(`https://api.genderize.io?name=${nameInput}`)\r\n            const data = await res.json() \r\n            setNameInfo({\r\n                name: data.name,\r\n                gender: data.gender,\r\n                probability: data.probability\r\n            })\r\n            \r\n        }catch(err){\r\n            console.error(err)\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <div className = \"container\" >\r\n            <h1>Name Checker</h1>\r\n            <NameContainer nameInfo={nameInfo} />\r\n            \r\n            <form className = \"form\" onSubmit = {getData}>\r\n                <input \r\n                    type = 'text' \r\n                    placeholder = \"type name here\"\r\n                    name = \"nameInput\"\r\n                    value = {nameInput} \r\n                    onChange = {e =>{\r\n                        \r\n                        setNameInput(e.target.value)\r\n                    }}\r\n                    />\r\n                    <button >Search</button>\r\n            </form>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NameLogic","import './App.css';\nimport NameLogic from './NameLogic.js'\n\nfunction App() {\n  return (\n    <NameLogic />\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}